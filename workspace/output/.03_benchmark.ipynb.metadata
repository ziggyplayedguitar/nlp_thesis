{"timestamp": 1743118312.440696, "stored_source_code": "# declare a list tasks whose products you want to use as inputs\nupstream = None\n\n# Parameters cell\nproduct = None\nimport pandas as pd\nimport sys\nfrom pathlib import Path\nimport logging\nimport json\nfrom tqdm import tqdm\n\n# Add project root to path\nsys.path.append(str(Path.cwd().parent))\n\nfrom src.data_tools.czech_data_tools import load_czech_media_data\nfrom src.models.predictor import TrollPredictor\nfrom src.analysis.benchmark import CzechBenchmark\n\n# Set up logging\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n# Initialize predictor with model\npredictor = TrollPredictor(\n    model_path=\"../\" + model_path,\n    comments_per_user=5,\n    max_length=64\n)\nDATA_DIR = Path('../data')\nczech_comments = load_czech_media_data(str(DATA_DIR / 'MediaSource'))\nprint(f\"Loaded {len(czech_comments)} comments from {czech_comments['author'].nunique()} unique authors\")\nbenchmark = CzechBenchmark()\n\n# Create benchmark set if it doesn't exist\nif not (Path(\"data/benchmark\") / \"benchmark_cases.json\").exists():\n    benchmark.create_benchmark_set(\n        comments_df=czech_comments,\n        n_authors=50,\n        min_comments=5\n    )\n\n# List of authors you want to add\nmanual_authors = [\n    \"Pavel Hanzl\",  # Very active commenter with strong opinions\n    \"Jitka B\u00e1rtov\u00e1\",  # High troll confidence but does not seem too trolly to me\n    \"Roman My\u0161ka\",   # Interesting case, dont think he is troll\n    \"Hosek Miroslav\", # Funny comment about Fiala\n    \"Roman Dost\u00e1l\",\n    \"Tom\u00e1\u0161 Volf\"\n]\n\n# Add these authors to benchmark\nbenchmark.add_authors(manual_authors, czech_comments)\n\n\n# Run benchmark tests\nresults = benchmark.run_benchmark(predictor)\n# Display Results\nprint(\"\\nBenchmark Results Summary:\")\nprint(\"-\" * 40)\nprint(f\"Total authors tested: {results['summary']['total_authors']}\")\nprint(f\"Total comments analyzed: {results['summary']['total_comments']}\")\nprint(f\"Troll predictions: {results['summary']['troll_predictions']}\")\n\nprint(\"\\nDetailed Results:\")\nprint(\"-\" * 40)\nfor author, data in results['predictions'].items():\n    print(f\"\\nAuthor: {author}\")\n    print(f\"Prediction: {data['prediction']}\")\n    print(f\"Confidence: {data['confidence']:.2%}\")\nfrom src.data_tools.czech_data_tools import extract_author_comments_simple\n\n# Extract comments for a specific author\nauthor = \"Roman Dost\u00e1l\"\nauthor_comments = extract_author_comments_simple(czech_comments, author)\n", "params": {"model_path": "checkpoints/best_model.pt"}}